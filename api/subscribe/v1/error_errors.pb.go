// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	errors "github.com/tkeel-io/kit/errors"
	codes "google.golang.org/grpc/codes"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the ego package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

var errUnknown *errors.TError
var errNotFound *errors.TError
var errList *errors.TError
var errInvalidArgument *errors.TError
var errInternalError *errors.TError
var errExist *errors.TError
var errUnauthenticated *errors.TError
var errInternalQuery *errors.TError
var errDeviceNotFound *errors.TError
var errInvalidArgumentSomeFields *errors.TError
var errDuplicateCreate *errors.TError
var errSomeDuplicateCreate *errors.TError
var errTryToDeleteDefaultSubscribe *errors.TError

func init() {
	errUnknown = errors.New(int(codes.Unknown), "io.tkeel.rudder.api.config.v1.ERR_UNKNOWN", "未知类型")
	errors.Register(errUnknown)
	errNotFound = errors.New(int(codes.NotFound), "io.tkeel.rudder.api.config.v1.ERR_NOT_FOUND", "未找到目标资源")
	errors.Register(errNotFound)
	errList = errors.New(int(codes.Internal), "io.tkeel.rudder.api.config.v1.ERR_LIST", "获取列表信息失败")
	errors.Register(errList)
	errInvalidArgument = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.config.v1.ERR_INVALID_ARGUMENT", "请求参数无效")
	errors.Register(errInvalidArgument)
	errInternalError = errors.New(int(codes.Internal), "io.tkeel.rudder.api.config.v1.ERR_INTERNAL_ERROR", "服务器内部错误")
	errors.Register(errInternalError)
	errExist = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.config.v1.ERR_EXIST", "订阅已存在")
	errors.Register(errExist)
	errUnauthenticated = errors.New(int(codes.PermissionDenied), "io.tkeel.rudder.api.config.v1.ERR_UNAUTHENTICATED", "请确保您对资源拥有相应权限")
	errors.Register(errUnauthenticated)
	errInternalQuery = errors.New(int(codes.Internal), "io.tkeel.rudder.api.config.v1.ERR_INTERNAL_QUERY", "内部资源获取失败")
	errors.Register(errInternalQuery)
	errDeviceNotFound = errors.New(int(codes.OK), "io.tkeel.rudder.api.config.v1.ERR_DEVICE_NOT_FOUND", "未找到设备")
	errors.Register(errDeviceNotFound)
	errInvalidArgumentSomeFields = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.config.v1.ERR_INVALID_ARGUMENT_SOME_FIELDS", "必须字段未填充有效值")
	errors.Register(errInvalidArgumentSomeFields)
	errDuplicateCreate = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.config.v1.ERR_DUPLICATE_CREATE", "重复添加订阅")
	errors.Register(errDuplicateCreate)
	errSomeDuplicateCreate = errors.New(int(codes.OK), "io.tkeel.rudder.api.config.v1.ERR_SOME_DUPLICATE_CREATE", "存在重复订阅")
	errors.Register(errSomeDuplicateCreate)
	errTryToDeleteDefaultSubscribe = errors.New(int(codes.InvalidArgument), "io.tkeel.rudder.api.config.v1.ERR_TRY_TO_DELETE_DEFAULT_SUBSCRIBE", "默认订阅不可删除")
	errors.Register(errTryToDeleteDefaultSubscribe)
}

func ErrUnknown() errors.Error {
	return errUnknown
}

func ErrNotFound() errors.Error {
	return errNotFound
}

func ErrList() errors.Error {
	return errList
}

func ErrInvalidArgument() errors.Error {
	return errInvalidArgument
}

func ErrInternalError() errors.Error {
	return errInternalError
}

func ErrExist() errors.Error {
	return errExist
}

func ErrUnauthenticated() errors.Error {
	return errUnauthenticated
}

func ErrInternalQuery() errors.Error {
	return errInternalQuery
}

func ErrDeviceNotFound() errors.Error {
	return errDeviceNotFound
}

func ErrInvalidArgumentSomeFields() errors.Error {
	return errInvalidArgumentSomeFields
}

func ErrDuplicateCreate() errors.Error {
	return errDuplicateCreate
}

func ErrSomeDuplicateCreate() errors.Error {
	return errSomeDuplicateCreate
}

func ErrTryToDeleteDefaultSubscribe() errors.Error {
	return errTryToDeleteDefaultSubscribe
}
