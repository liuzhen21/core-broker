// Code generated by protoc-gen-go-http. DO NOT EDIT.
// versions:
// protoc-gen-go-http 0.1.0

package v1

import (
	go_restful "github.com/emicklei/go-restful"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the tkeel package it is being compiled against.
// import package.context.http.reflect.go_restful.json.errors.emptypb.

type EntityHTTPServer interface {
	GetEntity(req *go_restful.Request, resp *go_restful.Response)
}

type EntityHTTPHandler struct {
	srv EntityHTTPServer
}

func newEntityHTTPHandler(s EntityHTTPServer) *EntityHTTPHandler {
	return &EntityHTTPHandler{srv: s}
}

func (h *EntityHTTPHandler) GetEntity(req *go_restful.Request, resp *go_restful.Response) {
	h.srv.GetEntity(req, resp)
}

func RegisterEntityHTTPServer(container *go_restful.Container, srv EntityHTTPServer) {
	var ws *go_restful.WebService
	for _, v := range container.RegisteredWebServices() {
		if v.RootPath() == "/v1" {
			ws = v
			break
		}
	}
	if ws == nil {
		ws = new(go_restful.WebService)
		ws.ApiVersion("/v1")
		ws.Path("/v1").Produces(go_restful.MIME_JSON)
		container.Add(ws)
	}

	handler := newEntityHTTPHandler(srv)
	ws.Route(ws.GET("/ws").
		To(handler.GetEntity))
}
